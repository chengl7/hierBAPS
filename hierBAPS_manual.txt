hierBAPS manual
Lu Cheng
23.03.2012

Here is a simple manual for how to run hierBAPS.

Before running hierBAPS, things needs to keep in mind:
1. hierBAPS uses uniform K prior
2. The prior for a site depend on the available snps, i.e. if a site only has 'AC-", then the prior for "ACGT-" is (1/3, 1/3, 0, 0, 1/3)
3. The distance between two sequences are the Hamming distance
4. If a dataset contains more than 4000 sequences, then sequences are pregrouped using complete linkage algorith, where the cutoff is set as minDistance+0.05*(maxDistance-minDistance).
5. The snp data are automatically updated as the clustering goes furhter, both the number of sequences and the snp sites might be reduced as the clustering goes to a lower layer.
6. hierBAPS only accept "ACGT-" in the sequences, thus please change "N" to "-" before the analysis
7. hierBAPS stops putting all sequences in a cluster if there are less than 4 sequences.
8. hierBAPS performs BAPS clustering recursively


Practical instructions
1. Fist time running hierBAPS
[partition, c, logml] = hierBAPS(alnMat, maxDepth, nPops)
Input: 
"alnMat" is the alignment of input sequences, should only contain "ACGT-"
"maxDepth" is the maximum layer you want to perform BAPS clustering
"nPops" is the maximum number of clusters set by the user
Output:
"partition" is a nSeq*maxDepth matrix, with each column represents the clustering results on each layer
"c" is meta variable, which contains hierBAPS running information, which could be used in further analysis
"logml" is a 1*maxDepth vector, each of which shows the logml of the whole dataset given the partition of that layer
There will also be two tab-separated files "partition.txt" and "logml.txt" in the current directory.
Note:
(i) If "nPops" clusters are detected in the 1st layer, the program stops further analysis and request you to input a larger "nPops".
(ii) "c" could be saved to resume clustering, thus it is OK to set a samll maxDepth in the first stage. Later if you set maxDepth to a larger value, it will resume clustering from the previous layer, which avoids lots of computation.

2. Later analysis
[partition, c, logml] = hierBAPS(previous_c, maxDepth, nPops)
If you run [partition, c, logml] = hierBAPS(alnMat, 4, nPops) in the first time, and you find you want to cluster it further to 8th layer, then you can input hierBAPS(previous_c, 8, nPops) to resume the analysis from 4th layer.

3. visualize the snp data
[~, idx] = sortrows(partition);
h = drawSnpMat(partition(idx,1), snpMat(idx,:),'shuffle')
This will draw the snp matrix according to the first layer partition, you may also change the number '1' to show another layer.
The 'shuffle' parameter will shuffle the snpMat columns so that they looks better.

